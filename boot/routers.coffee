requireDir = require 'require-dir'
traverse = require 'traverse'
express = require 'express'

routers = requireDir App.Config.paths.routers, recurse: true

module.exports = (app) ->

  traverse(routers).forEach (router) ->

    unless @isLeaf
      return

    unless typeof router is 'function'
      console.warn 'Router "%s" does not export a function.', @key
      return

    # `@path` is generated by the "traverse" library - it's an ordered list of
    # the keys (directories, in our case) that were traversed to reach the
    # current node, with the current node (router file) as the last element.
    #
    # So, for a folder structure of "/app/routers/users/publicUsers.coffee", it
    # would be equal to the folling, since we started in "/app/routers":
    #
    # [ 'users', 'publicUsers' ]
    routerPath = @path

    # Remove the filename, since we only want the path in which it resides.
    if routerPath[0] is 'router'
      routerPath.pop()

    # Now, following the above example, we have 'routers/users'
    routerPath = "/#{ routerPath.join '/' }"

    expressRouter = express.Router()
    router expressRouter

    app.use routerPath, expressRouter
